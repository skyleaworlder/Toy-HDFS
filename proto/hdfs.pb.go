// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: proto/hdfs.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Chunk(516 bytes) = checksum(4 bytes) + content(512 bytes)
type ChunkProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checksum uint32 `protobuf:"varint,1,opt,name=Checksum,proto3" json:"Checksum,omitempty"`
	Content  []byte `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *ChunkProto) Reset() {
	*x = ChunkProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hdfs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChunkProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkProto) ProtoMessage() {}

func (x *ChunkProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hdfs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkProto.ProtoReflect.Descriptor instead.
func (*ChunkProto) Descriptor() ([]byte, []int) {
	return file_proto_hdfs_proto_rawDescGZIP(), []int{0}
}

func (x *ChunkProto) GetChecksum() uint32 {
	if x != nil {
		return x.Checksum
	}
	return 0
}

func (x *ChunkProto) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type PacketHeaderProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OffsetInBlock     uint64 `protobuf:"varint,1,opt,name=OffsetInBlock,proto3" json:"OffsetInBlock,omitempty"`
	SeqNo             uint32 `protobuf:"varint,2,opt,name=SeqNo,proto3" json:"SeqNo,omitempty"`
	LastPacketInBlock bool   `protobuf:"varint,3,opt,name=LastPacketInBlock,proto3" json:"LastPacketInBlock,omitempty"`
	DataLen           uint32 `protobuf:"varint,4,opt,name=DataLen,proto3" json:"DataLen,omitempty"`
}

func (x *PacketHeaderProto) Reset() {
	*x = PacketHeaderProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hdfs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketHeaderProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketHeaderProto) ProtoMessage() {}

func (x *PacketHeaderProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hdfs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketHeaderProto.ProtoReflect.Descriptor instead.
func (*PacketHeaderProto) Descriptor() ([]byte, []int) {
	return file_proto_hdfs_proto_rawDescGZIP(), []int{1}
}

func (x *PacketHeaderProto) GetOffsetInBlock() uint64 {
	if x != nil {
		return x.OffsetInBlock
	}
	return 0
}

func (x *PacketHeaderProto) GetSeqNo() uint32 {
	if x != nil {
		return x.SeqNo
	}
	return 0
}

func (x *PacketHeaderProto) GetLastPacketInBlock() bool {
	if x != nil {
		return x.LastPacketInBlock
	}
	return false
}

func (x *PacketHeaderProto) GetDataLen() uint32 {
	if x != nil {
		return x.DataLen
	}
	return 0
}

type PacketProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header     *PacketHeaderProto `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	PacketData []*ChunkProto      `protobuf:"bytes,2,rep,name=PacketData,proto3" json:"PacketData,omitempty"`
}

func (x *PacketProto) Reset() {
	*x = PacketProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hdfs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketProto) ProtoMessage() {}

func (x *PacketProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hdfs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketProto.ProtoReflect.Descriptor instead.
func (*PacketProto) Descriptor() ([]byte, []int) {
	return file_proto_hdfs_proto_rawDescGZIP(), []int{2}
}

func (x *PacketProto) GetHeader() *PacketHeaderProto {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *PacketProto) GetPacketData() []*ChunkProto {
	if x != nil {
		return x.PacketData
	}
	return nil
}

// DataNodeBlockInfo represents only one Block in DataNode.
// This Proto do not need FileName of each Block.
// DataNode only maintain "Blocks", reporting its status.
// Service (FilePath/Name => Blocks) is provided in NameNode.
type DataNodeBlockInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockIdInSFS uint32 `protobuf:"varint,1,opt,name=BlockIdInSFS,proto3" json:"BlockIdInSFS,omitempty"`
	// BlockName = Prefix + Body
	BlockNamePrefix string `protobuf:"bytes,2,opt,name=BlockNamePrefix,proto3" json:"BlockNamePrefix,omitempty"`
	BlockNameBody   string `protobuf:"bytes,3,opt,name=BlockNameBody,proto3" json:"BlockNameBody,omitempty"`
	BlockFailed     bool   `protobuf:"varint,4,opt,name=BlockFailed,proto3" json:"BlockFailed,omitempty"`
}

func (x *DataNodeBlockInfoProto) Reset() {
	*x = DataNodeBlockInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hdfs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataNodeBlockInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataNodeBlockInfoProto) ProtoMessage() {}

func (x *DataNodeBlockInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hdfs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataNodeBlockInfoProto.ProtoReflect.Descriptor instead.
func (*DataNodeBlockInfoProto) Descriptor() ([]byte, []int) {
	return file_proto_hdfs_proto_rawDescGZIP(), []int{3}
}

func (x *DataNodeBlockInfoProto) GetBlockIdInSFS() uint32 {
	if x != nil {
		return x.BlockIdInSFS
	}
	return 0
}

func (x *DataNodeBlockInfoProto) GetBlockNamePrefix() string {
	if x != nil {
		return x.BlockNamePrefix
	}
	return ""
}

func (x *DataNodeBlockInfoProto) GetBlockNameBody() string {
	if x != nil {
		return x.BlockNameBody
	}
	return ""
}

func (x *DataNodeBlockInfoProto) GetBlockFailed() bool {
	if x != nil {
		return x.BlockFailed
	}
	return false
}

type ExtendedBlockInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId uint32 `protobuf:"varint,1,opt,name=BlockId,proto3" json:"BlockId,omitempty"` // the local id in local machine
}

func (x *ExtendedBlockInfoProto) Reset() {
	*x = ExtendedBlockInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hdfs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtendedBlockInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendedBlockInfoProto) ProtoMessage() {}

func (x *ExtendedBlockInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hdfs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendedBlockInfoProto.ProtoReflect.Descriptor instead.
func (*ExtendedBlockInfoProto) Descriptor() ([]byte, []int) {
	return file_proto_hdfs_proto_rawDescGZIP(), []int{4}
}

func (x *ExtendedBlockInfoProto) GetBlockId() uint32 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

type DataNodeIDProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IP           string `protobuf:"bytes,1,opt,name=IP,proto3" json:"IP,omitempty"`
	Host         string `protobuf:"bytes,2,opt,name=Host,proto3" json:"Host,omitempty"`
	TransferPort uint32 `protobuf:"varint,3,opt,name=TransferPort,proto3" json:"TransferPort,omitempty"`
	InfoPort     uint32 `protobuf:"varint,4,opt,name=InfoPort,proto3" json:"InfoPort,omitempty"`
}

func (x *DataNodeIDProto) Reset() {
	*x = DataNodeIDProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hdfs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataNodeIDProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataNodeIDProto) ProtoMessage() {}

func (x *DataNodeIDProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hdfs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataNodeIDProto.ProtoReflect.Descriptor instead.
func (*DataNodeIDProto) Descriptor() ([]byte, []int) {
	return file_proto_hdfs_proto_rawDescGZIP(), []int{5}
}

func (x *DataNodeIDProto) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

func (x *DataNodeIDProto) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DataNodeIDProto) GetTransferPort() uint32 {
	if x != nil {
		return x.TransferPort
	}
	return 0
}

func (x *DataNodeIDProto) GetInfoPort() uint32 {
	if x != nil {
		return x.InfoPort
	}
	return 0
}

type DataNodeInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             *DataNodeIDProto `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	BlocksTotalNum uint32           `protobuf:"varint,2,opt,name=BlocksTotalNum,proto3" json:"BlocksTotalNum,omitempty"` // BlocksTotalNum is capacity of blcks in DataNode
	BlocksUsedNum  uint32           `protobuf:"varint,3,opt,name=BlocksUsedNum,proto3" json:"BlocksUsedNum,omitempty"`   // BlocksUsedNum is the number of used blocks in DataNode
}

func (x *DataNodeInfoProto) Reset() {
	*x = DataNodeInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hdfs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataNodeInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataNodeInfoProto) ProtoMessage() {}

func (x *DataNodeInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hdfs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataNodeInfoProto.ProtoReflect.Descriptor instead.
func (*DataNodeInfoProto) Descriptor() ([]byte, []int) {
	return file_proto_hdfs_proto_rawDescGZIP(), []int{6}
}

func (x *DataNodeInfoProto) GetID() *DataNodeIDProto {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *DataNodeInfoProto) GetBlocksTotalNum() uint32 {
	if x != nil {
		return x.BlocksTotalNum
	}
	return 0
}

func (x *DataNodeInfoProto) GetBlocksUsedNum() uint32 {
	if x != nil {
		return x.BlocksUsedNum
	}
	return 0
}

type StorageReportProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlocksTotalNum uint32 `protobuf:"varint,1,opt,name=BlocksTotalNum,proto3" json:"BlocksTotalNum,omitempty"`
	BlocksUsedNum  uint32 `protobuf:"varint,2,opt,name=BlocksUsedNum,proto3" json:"BlocksUsedNum,omitempty"`
}

func (x *StorageReportProto) Reset() {
	*x = StorageReportProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hdfs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageReportProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageReportProto) ProtoMessage() {}

func (x *StorageReportProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hdfs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageReportProto.ProtoReflect.Descriptor instead.
func (*StorageReportProto) Descriptor() ([]byte, []int) {
	return file_proto_hdfs_proto_rawDescGZIP(), []int{7}
}

func (x *StorageReportProto) GetBlocksTotalNum() uint32 {
	if x != nil {
		return x.BlocksTotalNum
	}
	return 0
}

func (x *StorageReportProto) GetBlocksUsedNum() uint32 {
	if x != nil {
		return x.BlocksUsedNum
	}
	return 0
}

var File_proto_hdfs_proto protoreflect.FileDescriptor

var file_proto_hdfs_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x0a, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x97, 0x01,
	0x0a, 0x11, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x49, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x65, 0x71,
	0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x53, 0x65, 0x71, 0x4e, 0x6f, 0x12,
	0x2c, 0x0a, 0x11, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x4c, 0x61, 0x73, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x65, 0x6e, 0x22, 0x72, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x30, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x16,
	0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x64, 0x49, 0x6e, 0x53, 0x46, 0x53, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x49, 0x6e, 0x53, 0x46, 0x53, 0x12, 0x28, 0x0a, 0x0f, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0x32, 0x0a, 0x16,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x22, 0x75, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x50, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49,
	0x6e, 0x66, 0x6f, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x49,
	0x6e, 0x66, 0x6f, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x61,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x02, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a,
	0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x55, 0x73, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x55, 0x73, 0x65, 0x64,
	0x4e, 0x75, 0x6d, 0x22, 0x62, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75,
	0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x55, 0x73, 0x65, 0x64, 0x4e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x55, 0x73, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_hdfs_proto_rawDescOnce sync.Once
	file_proto_hdfs_proto_rawDescData = file_proto_hdfs_proto_rawDesc
)

func file_proto_hdfs_proto_rawDescGZIP() []byte {
	file_proto_hdfs_proto_rawDescOnce.Do(func() {
		file_proto_hdfs_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_hdfs_proto_rawDescData)
	})
	return file_proto_hdfs_proto_rawDescData
}

var file_proto_hdfs_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_hdfs_proto_goTypes = []interface{}{
	(*ChunkProto)(nil),             // 0: proto.ChunkProto
	(*PacketHeaderProto)(nil),      // 1: proto.PacketHeaderProto
	(*PacketProto)(nil),            // 2: proto.PacketProto
	(*DataNodeBlockInfoProto)(nil), // 3: proto.DataNodeBlockInfoProto
	(*ExtendedBlockInfoProto)(nil), // 4: proto.ExtendedBlockInfoProto
	(*DataNodeIDProto)(nil),        // 5: proto.DataNodeIDProto
	(*DataNodeInfoProto)(nil),      // 6: proto.DataNodeInfoProto
	(*StorageReportProto)(nil),     // 7: proto.StorageReportProto
}
var file_proto_hdfs_proto_depIdxs = []int32{
	1, // 0: proto.PacketProto.Header:type_name -> proto.PacketHeaderProto
	0, // 1: proto.PacketProto.PacketData:type_name -> proto.ChunkProto
	5, // 2: proto.DataNodeInfoProto.ID:type_name -> proto.DataNodeIDProto
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_hdfs_proto_init() }
func file_proto_hdfs_proto_init() {
	if File_proto_hdfs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_hdfs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChunkProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hdfs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketHeaderProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hdfs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hdfs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataNodeBlockInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hdfs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtendedBlockInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hdfs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataNodeIDProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hdfs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataNodeInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hdfs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageReportProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_hdfs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_hdfs_proto_goTypes,
		DependencyIndexes: file_proto_hdfs_proto_depIdxs,
		MessageInfos:      file_proto_hdfs_proto_msgTypes,
	}.Build()
	File_proto_hdfs_proto = out.File
	file_proto_hdfs_proto_rawDesc = nil
	file_proto_hdfs_proto_goTypes = nil
	file_proto_hdfs_proto_depIdxs = nil
}
