// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: proto/datanode-namenode.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DataNodeRegistrationProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      *DataNodeIDProto    `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Storage *StorageReportProto `protobuf:"bytes,2,opt,name=Storage,proto3" json:"Storage,omitempty"`
}

func (x *DataNodeRegistrationProto) Reset() {
	*x = DataNodeRegistrationProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_datanode_namenode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataNodeRegistrationProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataNodeRegistrationProto) ProtoMessage() {}

func (x *DataNodeRegistrationProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_datanode_namenode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataNodeRegistrationProto.ProtoReflect.Descriptor instead.
func (*DataNodeRegistrationProto) Descriptor() ([]byte, []int) {
	return file_proto_datanode_namenode_proto_rawDescGZIP(), []int{0}
}

func (x *DataNodeRegistrationProto) GetID() *DataNodeIDProto {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *DataNodeRegistrationProto) GetStorage() *StorageReportProto {
	if x != nil {
		return x.Storage
	}
	return nil
}

type RegisterDataNodeRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registration *DataNodeRegistrationProto `protobuf:"bytes,1,opt,name=Registration,proto3" json:"Registration,omitempty"`
}

func (x *RegisterDataNodeRequestProto) Reset() {
	*x = RegisterDataNodeRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_datanode_namenode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterDataNodeRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDataNodeRequestProto) ProtoMessage() {}

func (x *RegisterDataNodeRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_datanode_namenode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDataNodeRequestProto.ProtoReflect.Descriptor instead.
func (*RegisterDataNodeRequestProto) Descriptor() ([]byte, []int) {
	return file_proto_datanode_namenode_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterDataNodeRequestProto) GetRegistration() *DataNodeRegistrationProto {
	if x != nil {
		return x.Registration
	}
	return nil
}

type RegisterDataNodeResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registration *DataNodeRegistrationProto `protobuf:"bytes,1,opt,name=Registration,proto3" json:"Registration,omitempty"`
}

func (x *RegisterDataNodeResponseProto) Reset() {
	*x = RegisterDataNodeResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_datanode_namenode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterDataNodeResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDataNodeResponseProto) ProtoMessage() {}

func (x *RegisterDataNodeResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_datanode_namenode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDataNodeResponseProto.ProtoReflect.Descriptor instead.
func (*RegisterDataNodeResponseProto) Descriptor() ([]byte, []int) {
	return file_proto_datanode_namenode_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterDataNodeResponseProto) GetRegistration() *DataNodeRegistrationProto {
	if x != nil {
		return x.Registration
	}
	return nil
}

type HeartbeatRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataNodeID *DataNodeIDProto          `protobuf:"bytes,1,opt,name=DataNodeID,proto3" json:"DataNodeID,omitempty"`
	BlocksInfo []*DataNodeBlockInfoProto `protobuf:"bytes,2,rep,name=BlocksInfo,proto3" json:"BlocksInfo,omitempty"`
}

func (x *HeartbeatRequestProto) Reset() {
	*x = HeartbeatRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_datanode_namenode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequestProto) ProtoMessage() {}

func (x *HeartbeatRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_datanode_namenode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequestProto.ProtoReflect.Descriptor instead.
func (*HeartbeatRequestProto) Descriptor() ([]byte, []int) {
	return file_proto_datanode_namenode_proto_rawDescGZIP(), []int{3}
}

func (x *HeartbeatRequestProto) GetDataNodeID() *DataNodeIDProto {
	if x != nil {
		return x.DataNodeID
	}
	return nil
}

func (x *HeartbeatRequestProto) GetBlocksInfo() []*DataNodeBlockInfoProto {
	if x != nil {
		return x.BlocksInfo
	}
	return nil
}

type HeartbeatResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *HeartbeatResponseProto) Reset() {
	*x = HeartbeatResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_datanode_namenode_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponseProto) ProtoMessage() {}

func (x *HeartbeatResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_datanode_namenode_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponseProto.ProtoReflect.Descriptor instead.
func (*HeartbeatResponseProto) Descriptor() ([]byte, []int) {
	return file_proto_datanode_namenode_proto_rawDescGZIP(), []int{4}
}

func (x *HeartbeatResponseProto) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_proto_datanode_namenode_proto protoreflect.FileDescriptor

var file_proto_datanode_namenode_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65,
	0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x64,
	0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x78, 0x0a, 0x19, 0x44, 0x61, 0x74, 0x61,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x44, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x02, 0x49, 0x44, 0x12, 0x33, 0x0a,
	0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x22, 0x64, 0x0a, 0x1c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x44, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x1d, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x44, 0x0a, 0x0c, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x8e, 0x01, 0x0a, 0x15, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x0a, 0x0a, 0x44, 0x61, 0x74,
	0x61, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x44, 0x12, 0x3d, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x30, 0x0a, 0x16, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x32, 0xbf, 0x01, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x5d, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x4c, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_datanode_namenode_proto_rawDescOnce sync.Once
	file_proto_datanode_namenode_proto_rawDescData = file_proto_datanode_namenode_proto_rawDesc
)

func file_proto_datanode_namenode_proto_rawDescGZIP() []byte {
	file_proto_datanode_namenode_proto_rawDescOnce.Do(func() {
		file_proto_datanode_namenode_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_datanode_namenode_proto_rawDescData)
	})
	return file_proto_datanode_namenode_proto_rawDescData
}

var file_proto_datanode_namenode_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_datanode_namenode_proto_goTypes = []interface{}{
	(*DataNodeRegistrationProto)(nil),     // 0: proto.DataNodeRegistrationProto
	(*RegisterDataNodeRequestProto)(nil),  // 1: proto.RegisterDataNodeRequestProto
	(*RegisterDataNodeResponseProto)(nil), // 2: proto.RegisterDataNodeResponseProto
	(*HeartbeatRequestProto)(nil),         // 3: proto.HeartbeatRequestProto
	(*HeartbeatResponseProto)(nil),        // 4: proto.HeartbeatResponseProto
	(*DataNodeIDProto)(nil),               // 5: proto.DataNodeIDProto
	(*StorageReportProto)(nil),            // 6: proto.StorageReportProto
	(*DataNodeBlockInfoProto)(nil),        // 7: proto.DataNodeBlockInfoProto
}
var file_proto_datanode_namenode_proto_depIdxs = []int32{
	5, // 0: proto.DataNodeRegistrationProto.ID:type_name -> proto.DataNodeIDProto
	6, // 1: proto.DataNodeRegistrationProto.Storage:type_name -> proto.StorageReportProto
	0, // 2: proto.RegisterDataNodeRequestProto.Registration:type_name -> proto.DataNodeRegistrationProto
	0, // 3: proto.RegisterDataNodeResponseProto.Registration:type_name -> proto.DataNodeRegistrationProto
	5, // 4: proto.HeartbeatRequestProto.DataNodeID:type_name -> proto.DataNodeIDProto
	7, // 5: proto.HeartbeatRequestProto.BlocksInfo:type_name -> proto.DataNodeBlockInfoProto
	1, // 6: proto.DataNodeNameNode.RegisterDataNode:input_type -> proto.RegisterDataNodeRequestProto
	3, // 7: proto.DataNodeNameNode.SendHeartbeat:input_type -> proto.HeartbeatRequestProto
	2, // 8: proto.DataNodeNameNode.RegisterDataNode:output_type -> proto.RegisterDataNodeResponseProto
	4, // 9: proto.DataNodeNameNode.SendHeartbeat:output_type -> proto.HeartbeatResponseProto
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_datanode_namenode_proto_init() }
func file_proto_datanode_namenode_proto_init() {
	if File_proto_datanode_namenode_proto != nil {
		return
	}
	file_proto_hdfs_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_datanode_namenode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataNodeRegistrationProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_datanode_namenode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterDataNodeRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_datanode_namenode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterDataNodeResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_datanode_namenode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_datanode_namenode_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_datanode_namenode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_datanode_namenode_proto_goTypes,
		DependencyIndexes: file_proto_datanode_namenode_proto_depIdxs,
		MessageInfos:      file_proto_datanode_namenode_proto_msgTypes,
	}.Build()
	File_proto_datanode_namenode_proto = out.File
	file_proto_datanode_namenode_proto_rawDesc = nil
	file_proto_datanode_namenode_proto_goTypes = nil
	file_proto_datanode_namenode_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DataNodeNameNodeClient is the client API for DataNodeNameNode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataNodeNameNodeClient interface {
	RegisterDataNode(ctx context.Context, in *RegisterDataNodeRequestProto, opts ...grpc.CallOption) (*RegisterDataNodeResponseProto, error)
	SendHeartbeat(ctx context.Context, in *HeartbeatRequestProto, opts ...grpc.CallOption) (*HeartbeatResponseProto, error)
}

type dataNodeNameNodeClient struct {
	cc grpc.ClientConnInterface
}

func NewDataNodeNameNodeClient(cc grpc.ClientConnInterface) DataNodeNameNodeClient {
	return &dataNodeNameNodeClient{cc}
}

func (c *dataNodeNameNodeClient) RegisterDataNode(ctx context.Context, in *RegisterDataNodeRequestProto, opts ...grpc.CallOption) (*RegisterDataNodeResponseProto, error) {
	out := new(RegisterDataNodeResponseProto)
	err := c.cc.Invoke(ctx, "/proto.DataNodeNameNode/RegisterDataNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataNodeNameNodeClient) SendHeartbeat(ctx context.Context, in *HeartbeatRequestProto, opts ...grpc.CallOption) (*HeartbeatResponseProto, error) {
	out := new(HeartbeatResponseProto)
	err := c.cc.Invoke(ctx, "/proto.DataNodeNameNode/SendHeartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataNodeNameNodeServer is the server API for DataNodeNameNode service.
type DataNodeNameNodeServer interface {
	RegisterDataNode(context.Context, *RegisterDataNodeRequestProto) (*RegisterDataNodeResponseProto, error)
	SendHeartbeat(context.Context, *HeartbeatRequestProto) (*HeartbeatResponseProto, error)
}

// UnimplementedDataNodeNameNodeServer can be embedded to have forward compatible implementations.
type UnimplementedDataNodeNameNodeServer struct {
}

func (*UnimplementedDataNodeNameNodeServer) RegisterDataNode(context.Context, *RegisterDataNodeRequestProto) (*RegisterDataNodeResponseProto, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterDataNode not implemented")
}
func (*UnimplementedDataNodeNameNodeServer) SendHeartbeat(context.Context, *HeartbeatRequestProto) (*HeartbeatResponseProto, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendHeartbeat not implemented")
}

func RegisterDataNodeNameNodeServer(s *grpc.Server, srv DataNodeNameNodeServer) {
	s.RegisterService(&_DataNodeNameNode_serviceDesc, srv)
}

func _DataNodeNameNode_RegisterDataNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterDataNodeRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeNameNodeServer).RegisterDataNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DataNodeNameNode/RegisterDataNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeNameNodeServer).RegisterDataNode(ctx, req.(*RegisterDataNodeRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataNodeNameNode_SendHeartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeNameNodeServer).SendHeartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DataNodeNameNode/SendHeartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeNameNodeServer).SendHeartbeat(ctx, req.(*HeartbeatRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataNodeNameNode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DataNodeNameNode",
	HandlerType: (*DataNodeNameNodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterDataNode",
			Handler:    _DataNodeNameNode_RegisterDataNode_Handler,
		},
		{
			MethodName: "SendHeartbeat",
			Handler:    _DataNodeNameNode_SendHeartbeat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/datanode-namenode.proto",
}
