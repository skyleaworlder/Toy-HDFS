syntax = "proto3";

package proto;

// Chunk(516 bytes) = checksum(4 bytes) + content(512 bytes)
message ChunkProto {
    uint32 Checksum = 1;
    bytes Content = 2;
}

message PacketHeaderProto {
    uint64 OffsetInBlock = 1;
    uint32 SeqNo = 2;
    bool LastPacketInBlock = 3;
    uint32 DataLen = 4;
}

message PacketProto {
    PacketHeaderProto Header = 1;
    repeated ChunkProto PacketData = 2;
}

// DataNodeBlockInfo represents only one Block in DataNode.
// This Proto do not need FileName of each Block.
// DataNode only maintain "Blocks", reporting its status.
// Service (FilePath/Name => Blocks) is provided in NameNode.
message DataNodeBlockInfoProto {
    uint32 BlockIdInSFS = 1;
    // BlockName = Prefix + Body
    string BlockNamePrefix = 2;
    string BlockNameBody = 3;
    bool BlockFailed = 4;
}

message ExtendedBlockInfoProto {
    uint32 BlockId = 1; // the local id in local machine
}

message DataNodeIDProto {
    string IP = 1;
    string Host = 2;

    uint32 TransferPort = 3;
    uint32 InfoPort = 4;
}

message DataNodeInfoProto {
    DataNodeIDProto ID = 1;
    uint32 BlocksTotalNum = 2; // BlocksTotalNum is capacity of blcks in DataNode
    uint32 BlocksUsedNum = 3; // BlocksUsedNum is the number of used blocks in DataNode
}

message StorageReportProto {
    uint32 BlocksTotalNum = 1;
    uint32 BlocksUsedNum = 2;
}